{"version":3,"sources":["../../dist/calendar-icon~HOgszezb.svg","../../dist/right-chevron~FLrhNaXD.svg","../../dist/right-double-chevron~bjGHbmUM.svg","../../dist/left-chevron~MYFfYiLI.svg","../../dist/left-double-chevron~MMhjQrUz.svg","../../src/index.js","App.js","index.js"],"names":["module","exports","DatePicker","days","months","monthsObj","onChange","inputIcon","closeButton","hightlightToday","lang","hightlightColor","startMonth","startYear","date","Date","index","month","ref","handler","useState","getFullYear","year","setYear","getMonth","setMonth","el","useRef","inputRef","createRef","showDatePicker","setShowDatePicker","showMonthsArray","setShowMonthsArray","showYearsArray","setShowYearsArray","yearsList","setYearsList","monthDaysDetails","setDaysDetails","dayDetails","selectedDay","setSelectedDay","timestamp","setTimestamp","getCalendar","d","m","y","currentday","start","i","numberOfDays","getDate","getNumberOfDays","getDay","setDate","dayIndex","day","getTime","dayString","toLocaleDateString","weekday","push","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","changeYear","x","changeMonth","calendarMonth","isSelectedDay","selectedMonth","isTodayDay","yearsArray","parseInt","value","addDateInInput","daysMarkup","map","React","key","calendar","data-month","className","datepicker","onClick","dayObj","Intl","DateTimeFormat","format","onDateClick","id","for","src","CalendarIcon","alt","type","PreviousYear","PreviousMonth","monthObj","NextMonth","NextYear","defaultProps","App","console","log","selectedDate","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fd139978.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calendar-icon~HOgszezb.dcfbb135.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-chevron~FLrhNaXD.d6fe6a98.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-double-chevron~bjGHbmUM.0ab7dabc.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-chevron~MYFfYiLI.ea8ab7b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-double-chevron~MMhjQrUz.6eb16509.svg\";","import React from 'react'\nimport datepicker from './datepicker.module.css'\nimport { useEffect, useState, useRef, createRef, useImperativeHandle } from 'react'\nimport CalendarIcon from 'assets/calendar-icon.svg'\nimport NextMonth from 'assets/right-chevron.svg'\nimport NextYear from 'assets/right-double-chevron.svg'\nimport PreviousMonth from 'assets/left-chevron.svg'\nimport PreviousYear from 'assets/left-double-chevron.svg'\n\n/**\n * Datepicker plugin developped for React, from Jquery plugin\n * @param {function} inputValue takes a parent function to access a selected date fromthe datepicker \n * @param {boolean} inputIcon option to display an icon in the input (false by default) \n * @param {boolean} saveButton optionn to display the save button at the bottom of the datepicker\n * @param {string} lang language in which to display the weekdays and months\n * @param {number} startMonth personnalized starting month. By default, the current month is used.\n * @param {number} startYear personnalized starting year. By default, the current year is used.\n * @returns Datepicker React component\n */\nexport const DatePicker = ({ onChange, inputIcon, closeButton, hightlightToday, hightlightColor, lang, startMonth, startYear}) => {\n    //Constants\n    const date = new Date()\n    let days, months, monthsObj\n    let yearStart = 1950\n    let yearEnd = 2050\n\n    //Sets days & months languages\n    if(lang === \"en\") {\n        days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n        months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]   \n        \n        monthsObj = [\n            {\n                index: 0,\n                month: \"January\"\n            },\n            {\n                index: 1,\n                month: \"February\"\n            },\n            {\n                index: 2,\n                month: \"March\"\n            },\n            {\n                index: 3,\n                month: \"April\"\n            },\n            {\n                index: 4,\n                month: \"May\"\n            },\n            {\n                index: 5,\n                month: \"June\"\n            },\n            {\n                index: 6,\n                month: \"July\"\n            },\n            {\n                index: 7,\n                month: \"August\"\n            },\n            {\n                index: 8,\n                month: \"September\"\n            },\n            {\n                index: 9,\n                month: \"October\"\n            },\n            {\n                index: 10,\n                month: \"November\"\n            },\n            {\n                index: 11,\n                month: \"December\"\n            }\n        ]\n    } else if(lang === \"fr\") {\n        days = [\"D\", \"L\", \"M\", \"M\", \"J\", \"V\", \"S\"]\n        months = [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"]\n\n        monthsObj = [\n            {\n                index: 0,\n                month: \"Janvier\"\n            },\n            {\n                index: 1,\n                month: \"Février\"\n            },\n            {\n                index: 2,\n                month: \"Mars\"\n            },\n            {\n                index: 3,\n                month: \"Avril\"\n            },\n            {\n                index: 4,\n                month: \"Mai\"\n            },\n            {\n                index: 5,\n                month: \"Juin\"\n            },\n            {\n                index: 6,\n                month: \"Juillet\"\n            },\n            {\n                index: 7,\n                month: \"Août\"\n            },\n            {\n                index: 8,\n                month: \"Septembre\"\n            },\n            {\n                index: 9,\n                month: \"Octobre\"\n            },\n            {\n                index: 10,\n                month: \"Novembre\"\n            },\n            {\n                index: 11,\n                month: \"Décembre\"\n            }\n        ]\n    }\n\n    const dayOfWeekStart = 0\n\n    //Current time\n    const [year, setYear] = useState(startYear !== null ? startYear : date.getFullYear())\n    const [month, setMonth] = useState(startMonth !== null ? startMonth : date.getMonth())\n\n  \n    //Initial state\n    const el = useRef(null)\n    const inputRef = createRef()\n    const [showDatePicker, setShowDatePicker] = useState(false)\n    const [showMonthsArray, setShowMonthsArray] = useState(false)\n    const [showYearsArray, setShowYearsArray] = useState(false)\n    \n    //Consts for years/month/days list in components \n    const [yearsList, setYearsList] = useState()\n    const [monthDaysDetails, setDaysDetails] = useState()\n    let dayDetails = []\n    \n    const [selectedDay, setSelectedDay] = useState('')\n   \n    //Timestamps\n    const [timestamp, setTimestamp] = useState('')\n\n\n    /**\n     * Gets the number of days in a month\n     * @param {number} year month's year\n     * @param {number} month month in which the number of days is to be determined \n     * @returns number of days in given month & year\n     */\n    const getNumberOfDays = (year, month)=> { return 40 - new Date(year, month, 40).getDate() }\n\n  \n    /**\n     * Get the specifics of each days in a month to build the datepicker\n     * @returns array of objects containing a day, its index, its timestamp, its month & its year\n     */\n    const getCalendar = () => {\n        let start = new Date(year, month, 1, 12)\n        let i = 0\n        let d, day, m, y, currentday, timestamp\n        let numberOfDays = getNumberOfDays(year, month) + 5\n       \n        while (start.getDay() !== dayOfWeekStart) { start.setDate(start.getDate() - 1) }\n        \n        while( i < numberOfDays) {\n            i++\n            day = start.getDay()\n            d = start.getDate()\n            m = start.getMonth()\n            y = start.getFullYear()\n            timestamp= new Date(y, m, d).getTime()\n            \n            currentday = {\n                dayIndex: day,\n                day: d,\n                month: m,\n                year: y,\n                timestamp: timestamp,\n                dayString: new Date(timestamp).toLocaleDateString('en-US', { weekday: 'long' })\n            }\n           \n            dayDetails.push(currentday)   \n            start.setDate(d + 1)           \n        }  \n        return dayDetails\n    }\n\n    /**\n     * Gets each years from yearStart (1950) to yearEnd (2050)\n     * @returns array of years (numbers) \n     */\n    const yearsArray = () => {\n        let yearsArray = []\n        for(let i = parseInt(yearStart, 10); i <= parseInt(yearEnd, 10); i++) {\n            yearsArray.push(i)\n        }\n        return yearsArray\n    }\n   \n\n\n    function useOnClickOutside(ref, handler) {\n        useEffect(\n          () => {\n            const listener = event => {\n              if (!ref.current || ref.current.contains(event.target)) {\n                return;\n              }      \n              handler(event);\n            };\n      \n            document.addEventListener('mousedown', listener);\n           \n            return () => {\n              document.removeEventListener('mousedown', listener);\n            };\n          },\n          [ref, handler]\n        );\n      }\n    useOnClickOutside(el, () => setShowDatePicker(false))\n\n\n    const changeYear = (x) => { setYear(year + x) }\n\n    /**\n     * Change the month on the datepicker & the year when month = -1 or 12 \n     * @param {number} x increments/decrements current month's index\n     */\n    const changeMonth = (x) => {\n        let calendarMonth = month + x\n        setMonth(month + x)\n        \n        if(calendarMonth === -1) {\n            setMonth(11)\n            changeYear(-1)   \n        } else if(calendarMonth === 12) {\n            setMonth(0)\n            changeYear(1)\n        }\n    }\n\n    /**\n     * Sets the newly selected date on the datepicker \n     * @param {object} dayObj Object in the dayDetails array\n     * @returns New selected date in string format\n     */\n    const onDateClick = (dayObj) => {\n        const date = new Date(dayObj.year, dayObj.month, dayObj.day)\n        setSelectedDay(new Intl.DateTimeFormat().format(date))\n        setTimestamp(dayObj.day)\n        onChange(new Intl.DateTimeFormat().format(date))\n\n        return (new Intl.DateTimeFormat().format(date))\n    }\n\n    const addDateInInput = (selectedDay) => { inputRef.current.value = selectedDay }\n\n    /**\n     * Highlight the date if selected by user\n     */\n    const isSelectedDay = (index, selectedMonth) =>  {\n        if(selectedMonth === month && timestamp === index) { return true}\n        return false\n    }\n\n    /**\n     * Highlight current date if found on the datepicker open month\n     * @param {object} day Any date generated on the datepicker\n     * @returns Boolean\n     */\n    const isTodayDay = (day, month) => {\n        if(date.getDate() === day && date.getMonth() === month && date.getFullYear() === year && hightlightToday) {  return true  }\n        return false\n    }   \n\n    useEffect(() => {       \n        setYearsList(yearsArray())\n        setDaysDetails(getCalendar())      \n        addDateInInput(selectedDay)\n      \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[month, year, selectedDay])\n\n\n    //Weekdays component\n    const daysMarkup = (\n        days.map((day, index) =>(\n          <div key={index}>{day}</div>\n      ))\n    )\n\n    //Calendar component\n    const calendar = (\n        monthDaysDetails && monthDaysDetails.map((day, index) => (\n            <div data-month={day.month} \n            className={(day.month !== month ? datepicker.datepickerOtherMonth : '') \n            + ' ' + datepicker.calendarDay + (isTodayDay(day.day, day.month) ? ' ' + datepicker.highlightToday : '') \n            + (isSelectedDay(day.day, day.month) ? ' ' + datepicker.highlighted : '') } \n            key={index}  \n            onClick={() => { \n                onDateClick(day)\n             }}>{day.day}</div>\n        ))\n    )\n \n    return(\n        <div ref={el} className={datepicker.reactDatepicker} id=\"react-datepicker-plugin\">   \n            <div   onClick={()=> setShowDatePicker(true)} className={datepicker.datepickerInput} id=\"datepicker-input-wrapper\">\n                <label  for=\"date-input\">\n                {inputIcon && <img src={CalendarIcon} alt=\"Calendar icon\"  />}\n                <input type='text'  ref={inputRef} id=\"date-input\" />\n                </label>\n            </div>\n\n            {showDatePicker ? (\n                <div className={datepicker.datepickerWrapper} id=\"datepicker-wrapper\">\n                    <div className={datepicker.datepickerHead}>\n                        <div className={datepicker.datepickerHeadButton} onClick={() => changeYear(-1)}>\n                            <img src={PreviousYear} alt=\"Previous year button\" />\n                        </div>\n                        <div className={datepicker.datepickerHeadButton} onClick={() => changeMonth(-1)}>\n                            <img src={PreviousMonth} alt=\"Previous month button\" />\n                        </div>\n\n                        <div className={datepicker.datepickerHeadDates}>\n                            <div className={datepicker.datepickerHeadMonth} id=\"datepicker-month\">\n                                <span onClick={() => setShowMonthsArray(true)}>{!showMonthsArray && months[month]}</span>\n                                <ul className={datepicker.datepickerArray} id=\"datepicker-months-array\">\n                                    {showMonthsArray && monthsObj.map((monthObj, index) => (\n                                        <li key={index} onClick={() => {setMonth(index); setShowMonthsArray(false)}}>{monthObj.month}</li>\n                                    ))}\n                                </ul> \n                            </div>\n\n                            <span> - </span>\n\n                            <div className={datepicker.datepickerHeadYear} id=\"datepicker-year\">\n                                <span onClick={() => setShowYearsArray(true) }>{!showYearsArray && year}</span>\n                                <ul className={datepicker.datepickerArray} id=\"datepicker-years-array\">\n                                    {showYearsArray && yearsList.map((year, index) => (\n                                        <li key={index} onClick={() => {setYear(year); setShowYearsArray(false)}}>{year}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n\n                        <div className={datepicker.datepickerHeadButton}onClick={() => changeMonth(1)}>\n                            <img src={NextMonth} alt=\"Next month button\" />\n                        </div>\n                        <div className={datepicker.datepickerHeadButton}  onClick={() => changeYear(1)}>\n                            <img src={NextYear} alt=\"Next year button\" />\n                        </div>                   \n                    </div>\n\n                    <div className={datepicker.datepickerBody} id=\"datepicker-body\">\n                        <div className={datepicker.datepickerWeekdaysMarkup} id=\"datepicker-weekdays-wrapper\">\n                            {daysMarkup}\n                        </div>\n                        <div className={datepicker.datepickerCalendar} id=\"datepicker-calendar\">\n                            {calendar}\n                        </div>\n                    </div>\n                    {closeButton && \n                        <div className={datepicker.datepickerCloseButton} id=\"datepicker-close-button\">\n                            <button onClick={() => {\n                                setShowDatePicker(false)\n                                setShowMonthsArray(false)\n                                setShowYearsArray(false)\n                            }}>{lang === \"eng\" ? \"Close\" : \"Fermer\"}</button>\n                        </div>\n                    }\n                </div>\n            ) : ''}\n        </div>\n    )\n}\n\n\nDatePicker.defaultProps = {\n    onChange: () => {},\n    inputIcon: false,\n    closeButton: true,\n    hightlightToday: true,\n    hightlightColor: null,\n    lang: \"en\",\n    startYear: null,\n    startMonth: null\n}\n","import React from 'react'\nimport { DatePicker } from 'datepicker-library-oc'\nimport  'datepicker-library-oc/dist/index.css'\nimport { useState, useEffect } from 'react'\n\nexport default function App() {\n    const [date, setDate] = useState()\n\n    const handleChange = (selectedDate) => {\n        setDate(selectedDate)\n    }\n\n    \n    useEffect(() => {\n        console.log(date)\n    }, [date])\n\n  return (\n      <div className='componentExamplesWrapper'>\n          <h1>Datepicker plugin examples</h1>\n\n          <div>\n              <h2>Basic datepicker</h2>\n              <DatePicker onChange={handleChange} />\n          </div>\n\n          <div>\n              <h2>Datepicker with icon</h2>\n              <DatePicker inputIcon={true} />\n          </div>\n\n          <div>\n              <h2>Hiding the close button</h2>\n              <DatePicker  closeButton={false} />\n          </div>\n\n          <div>\n              <h2>Ignoring today's date (no highlight)</h2>\n              <DatePicker  hightlightToday={false} />\n          </div>\n\n          <div>\n              <h2>Personnalized starting month</h2>\n              <DatePicker  startMonth={0} />\n          </div>\n\n          <div>\n              <h2>Personnalized starting year</h2>\n              <DatePicker  startYear={2000} />\n          </div>\n\n          <div>\n              <h2>Switching the language to french</h2>\n              <DatePicker  lang=\"fr\" /> \n          </div>\n      </div>\n  )\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}